package Stack;

public class stackUsingArray {
	private int data[];
	private int TopIndex;
	public stackUsingArray(){
		data=new int[10];
		TopIndex=-1;

	}
	public int size() {
		// TODO Auto-generated method stub
		return TopIndex+1;
	}
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return TopIndex==-1;
	}
	public int top() throws StackEmptyException {
		// TODO Auto-generated method stub
		if(TopIndex==-1) {
		//	StackEmptyException e=new StackEmptyException();
			//throw e;
			throw new StackEmptyException();
		}
		return data[TopIndex];
	}
	public void push(int i) throws StackFullException {
		// TODO Auto-generated method stub
		if(TopIndex==data.length-1) {
			//throw new StackFullException();
			doubleCapacity();
		}
		data[++TopIndex]=i;

	}
	private void doubleCapacity() {
		// TODO Auto-generated method stub
	int temp[]=data;
	data=new int[2*temp.length];
	for(int i=0;i<temp.length;i++) {
		data[i]=temp[i];
	}
	}
	public int pop() throws StackEmptyException {
		// TODO Auto-generated method stub
		if(TopIndex==-1) {
			throw new StackEmptyException();
		}
		int temp=data[TopIndex];
		TopIndex--;
		return temp;
	}


}
//////////////////////////////////////////////////////////
package Stack;

public class stackUse {

	public static void main(String[] args) throws StackFullException, StackEmptyException {
		// TODO Auto-generated method stub
		stackUsingArray stack=new stackUsingArray();
		int data[]= {2, 4 ,3,5,7,7};
		for(int i=0;i<data.length;i++) {
			stack.push(data[i]);
		}
		while(!stack.isEmpty()) {
			System.out.println(stack.pop()); 
		}
		//		stack.push(10);
		//		stack.push(20);
		//		System.out.println(stack.pop());	;
		//		System.out.println(stack.top());	
		//		System.out.println(stack.size());
		//		stack.pop();
		//		System.out.println(stack.isEmpty()); 	
	}

}
