package LinkedList;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
public class Node<T> {
 T data;
 Node<T> next;
 public Node(T data) {
	 this.data=data;
 }
}

public class FindLength {
	static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		Node<Integer> head=takeInput();
		System.out.println(findLength(head));
	}

	private static int findLength(Node<Integer> head) {
		// TODO Auto-generated method stub
		int count=0;
		Node<Integer> temp=head;
		while(temp!=null) {
			count++;
			temp=temp.next;
		}
		return count;
	}

	private static Node<Integer> takeInput() throws IOException {
		// TODO Auto-generated method stub
		Node<Integer> head=null,tail=null;
		String[] input=br.readLine().trim().split("\\s");
		int i=0;
		while (i<input.length&& !input[i].equals("-1") ) {
			int n=Integer.parseInt(input[i]);
			Node<Integer> newNode=new Node<>(n);
			if(head ==null) {
				head=newNode;
				tail=newNode;
			}else {
				tail.next=newNode;
				tail=newNode;
			}
			i+=1;
		}
		return head;

	}


}
