package Recursion;

import java.util.Scanner;


public class MergeSortUsingRecursion {

	public static void MergeSort(int[] arr) {
		if(arr.length<=1) {
			return;
		}
		int[] s1=new int[arr.length/2];
		int[] s2=new int[arr.length-s1.length];
		for(int i=0;i<arr.length/2;i++) {
			s1[i]=arr[i];
		}
		for(int i=arr.length/2;i<arr.length;i++) {
			s2[i-arr.length/2]=arr[i];
		}
		MergeSort(s1);
		MergeSort(s2);
		MergeFinalResult(s1,s2,arr);
	}

	private static void MergeFinalResult(int[] s1, int[] s2, int[] arr) {
		// TODO Auto-generated method stub
		int i=0;
		int j=0;
		int k=0;
		while(i<s1.length &&j<s2.length) {
			if(s1[i]<=s2[j]) {
				arr[k]=s1[i];
				i++;
				k++;
			}
			else {
				arr[k]=s2[j];
				j++;
				k++;
			}

		}

		while (i<s1.length) {
			arr[k]=s1[i];
			i++;
			k++;
		}


		while (j<s2.length) {
			arr[k]=s2[j];
			j++;
			k++;


		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner Sc=new Scanner(System.in);
    int n=Sc.nextInt();
		int arr[]=new int [n];
		for(int i=0;i<arr.length;i++) {
			arr[i]=Sc.nextInt();
		}

		MergeSort(arr);
		for(int i=0;i<arr.length;i++) {
			System.out.println(arr[i]);
		}
	}

}
