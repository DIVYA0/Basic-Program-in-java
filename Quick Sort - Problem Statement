import java.util.Scanner;

import org.graalvm.compiler.nodes.ReturnNode;

public class QuickSortUsingRecursion {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner Sc=new Scanner(System.in);
    int n=Sc.nextInt();
		int arr[]=new int [n];
		for(int i=0;i<arr.length;i++) {
			arr[i]=Sc.nextInt();
		}

		quickSort(arr,0,arr.length-1);
		for(int i=0;i<arr.length;i++) {
			System.out.println(arr[i]);
		}
	}

	private static void quickSort(int[] arr, int si, int ei) {
		if(si>=ei) {
			return;
		}
		int partitionOutput=partition(arr,si,ei);
		quickSort(arr, si, partitionOutput-1);
		quickSort(arr, partitionOutput+1, ei);

		// TODO Auto-generated method stub

	}

	private static int partition(int[] arr, int si, int ei) {
		// TODO Auto-generated method stub
		int pivot=arr[si];
		int count=0;
		for(int i=si+1;i<=ei;i++) {
			if(pivot>arr[i]) {
				count++;
			}

		}
		int temp=pivot;
		arr[si]=arr[si+count];
		arr[si+count]=temp;
		int i=si;
		int j=ei;
		while(i<j) {
			if(arr[i]<pivot) {
				i++;
			}else if(arr[j]>=pivot) {
				j--;	
			}else {
				temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
				i++;
				j--;
			}
		}
		return si+count;

	}


}
